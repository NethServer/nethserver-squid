#!/usr/bin/perl

#
# Copyright (C) 2019 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use warnings;
use esmith::ConfigDB;
use JSON;

require '/usr/libexec/nethserver/api/lib/helper_functions.pl';

my $input = readInput();
my $cmd = $input->{'action'};


if ($cmd eq 'categories') {
    my $db = esmith::ConfigDB->open_ro();
    my $filter = $input->{'filter'} || '';
    my $out = `/usr/libexec/nethserver/api/nethserver-squid/categories/list-categories $filter`;
    my $ret = safe_decode_json($out);
    my $downloaded = JSON::false;
    foreach (@{$ret->{'categories'}}) {
        if ($_->{'type'} ne 'custom') {
            $downloaded = JSON::true;
        }
    }
    $ret->{'source'} = { 'list' =>  $db->get_prop('squidguard', 'Lists'), 'downloaded' => $downloaded };

    print encode_json($ret);
} elsif ($cmd eq 'configuration') {
    my $ret;
    my $db = esmith::ConfigDB->open_ro(); 
    my $cdb = esmith::ConfigDB->open_ro('contentfilter');
    my @profiles;
    my $filter = $db->get('squidguard') || '';
    if ($filter) {
        $ret->{'configuration'}{"Lists"} = $filter->prop('Lists');
        $ret->{'configuration'}{"CustomListURL"} = $filter->prop('CustomListURL');
    }
    # list affected profiles
    foreach($cdb->get_all_by_prop('type' => 'profile')) {
        next if ($_->key eq 'default_profile');
        push(@profiles, $_->key);
    }
    $ret->{'profiles'} = \@profiles;

    print encode_json($ret);
} elsif ($cmd eq 'lists') {
    print encode_json({'lists' => ['toulouse','custom']})
} else {
    error();
}
