#!/usr/bin/perl

#
# Copyright (C) 2019 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use warnings;
use esmith::ConfigDB;

require '/usr/libexec/nethserver/api/lib/helper_functions.pl';

my $input = readInput();
# the only valid cmd is 'create'
my $cmd = $input->{'action'};

my $db = esmith::ConfigDB->open('squid');
my $next = 1;
foreach ($db->get_all()) {
    if ($_->key > $next) {
        $next = $_->key;
    }
}
$next++;

my $obj = {Description => $input->{'Description'}, type => 'rule', 'status' => 'enabled'};
if ($input->{'Dst'}) {
    $obj->{'Dst'} = join(",", @{$input->{'Dst'}});
}
$obj->{'Src'} = $input->{'Src'}{'type'}.";".$input->{'Src'}{'name'};
$obj->{'Action'} = $input->{'Action'}{'type'}.";".$input->{'Action'}{'name'};

$db->new_record($next, $obj);

system("/sbin/e-smith/signal-event -j nethserver-squid-save");
