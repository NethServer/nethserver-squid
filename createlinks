#!/usr/bin/perl

#
# Copyright (C) 2013 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::Build::CreateLinks  qw(:all);

#--------------------------------------------------
# actions for nethserver-squid-update event
#--------------------------------------------------

my $event = "nethserver-squid-update";

event_actions($event, qw(
   initialize-default-databases 00
   nethserver-squid-conf 20
   nethserver-squid-check-cache 30
));

templates2events("/etc/squid/squid.conf",  $event);
templates2events("/etc/squid/acls/no_cache.acl",  $event);
templates2events("/etc/squid/acls/ssl_bypass.acl",  $event);
templates2events("/etc/dnsmasq.conf",  $event);
templates2events("/etc/hosts",  $event);
templates2events("/var/www/html/wpad.dat",  $event);
templates2events("/etc/sysconfig/squid",  $event);
templates2events("/etc/httpd/conf.d/wpad.conf",  $event);
event_services($event, 'squid' => 'restart');
event_services($event, 'httpd' => 'reload');
event_services($event, 'dnsmasq' => 'restart');

#--------------------------------------------------
# actions for nethserver-squid-save event
#--------------------------------------------------

my $event = "nethserver-squid-save";

event_actions($event, qw(
   nethserver-squid-check-cache 20
   firewall-adjust 30
));

templates2events("/etc/squid/squid.conf",  $event);
templates2events("/etc/squid/acls/no_cache.acl",  $event);
templates2events("/etc/squid/acls/ssl_bypass.acl",  $event);
templates2events("/etc/dnsmasq.conf",  $event);
templates2events("/etc/hosts",  $event);
templates2events("/var/www/html/wpad.dat",  $event);
templates2events("/etc/sysconfig/squid",  $event);
event_services($event, 'squid' => 'restart');
event_services($event, 'httpd' => 'reload');
event_services($event, 'dnsmasq' => 'restart');

#--------------------------------------------------
# actions for nethserver-squid-clear-cache
#--------------------------------------------------
my $event = "nethserver-squid-clear-cache";

event_actions($event, qw(
    nethserver-squid-clear-cache 20
));

#--------------------------------------------------
# actions for interface-update
#--------------------------------------------------
my $event = "interface-update";

templates2events("/etc/squid/squid.conf",  $event);
templates2events("/etc/httpd/conf.d/wpad.conf",  $event);
event_services($event, 'squid' => 'restart');
event_actions($event, "nethserver-squid-httpd-reload", 20);

#
# nethserver-samba-{save,update,adsjoin) events
#
foreach (qw(
    nethserver-samba-save
    nethserver-samba-update
    nethserver-samba-adsjoin
)) {
    event_templates($_, qw(
        /etc/squid/squid.conf
        /etc/sysconfig/squid
    ));
    event_services($_, qw(
       squid restart
    ));
}

#
# Invalidate credentials cache when user account state changes
#
foreach (qw(
    password-modify
    user-lock
    user-unlock
)) {
    event_services($_, qw(
       squid reload
));
}

#
# Update wpad on firewall objects change
#
foreach (qw(
    nethserver-firewall-base-save
    firewall-objects-modify
)) {
    event_templates($_, qw(
        /var/www/html/wpad.dat
    ));
}

#----------------------------------------------------------------------
# Expand squid and restart when a global http/https proxy is configured
#----------------------------------------------------------------------

templates2events("/etc/squid/squid.conf","proxy-modify");
event_services("proxy-modify", 'squid' => 'restart');


safe_symlink('../winbind.service', 'root/usr/lib/systemd/system/squid.service.wants/winbind.service');
