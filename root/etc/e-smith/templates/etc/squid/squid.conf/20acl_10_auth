{
   use esmith::NetworksDB;
   use NethServer::SSSD;
   my $ndb = esmith::NetworksDB->open_ro();
   my $green_mode = $squid{'GreenMode'} || "manual";
   my $blue_mode = $squid{'BlueMode'} || "manual";
   my $sssd = new NethServer::SSSD();
   if ($green_mode eq 'authenticated' || (defined($ndb->blue()) && $blue_mode eq 'authenticated')) {
       $OUT .= "# Authentication required\n\n";

       if ($sssd->isAD()) {
           $OUT .= "\n# GSSAPI auth in ADS mode\n";
           $OUT .= "auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth -i\n";
           $OUT .= "auth_param negotiate children 10\n";
           $OUT .= "auth_param negotiate keep_alive on\n";

           $OUT .= "\n# Additional NTLM auth for Windows XP clients in ADS mode\n";
           $OUT .= "auth_param ntlm program /usr/bin/ntlm_auth --helper-protocol=squid-2.5-ntlmssp\n";
           $OUT .= "auth_param ntlm children 10\n";
           $OUT .= "auth_param ntlm keep_alive off\n";
       }

       $OUT .= "\n# BASIC PAM auth (fallback) \n";
       $OUT .= "auth_param basic program  /usr/lib64/squid/basic_pam_auth\n";
       $OUT .= "auth_param basic children 5\n";
       $OUT .= "auth_param basic realm $DomainName\n";
       $OUT .= "auth_param basic credentialsttl 1 hours\n";
       $OUT .= "auth_param basic casesensitive on\n";


       $OUT.="acl authenticated proxy_auth REQUIRED\n";
   }
}
